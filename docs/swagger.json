{
    "swagger": "2.0",
    "info": {
        "description": "interacting with smart contract, collecting tokens, perform trade",
        "title": "Flash Loan Arbitrage bot",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/contract/pairs": {
            "get": {
                "description": "Get full list of pairs from contract tradecase memory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract: pairs"
                ],
                "summary": "List Pairs",
                "operationId": "listPairs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPairs"
                        }
                    }
                }
            },
            "post": {
                "description": "Add list of pairs to contract tradecase memory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract: pairs"
                ],
                "summary": "Add Pairs",
                "operationId": "addPairs",
                "parameters": [
                    {
                        "description": "Add pairs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListPairs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ListPairs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contract/pairs/find": {
            "post": {
                "description": "Get list of pool pairs from contract tradecase memory by token pair \u0026 protocol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract: pairs"
                ],
                "summary": "Get Pairs",
                "operationId": "getPairs",
                "parameters": [
                    {
                        "description": "Get pairs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestPairs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPairs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contract/tokens/base": {
            "get": {
                "description": "Request base token list from deployed contract memory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: base tokens"
                ],
                "summary": "List base Tokens",
                "operationId": "getTokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parser/core/parse": {
            "get": {
                "description": "Parse and store to parser local memory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parse: core"
                ],
                "summary": "Parse",
                "operationId": "parse",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parser/core/parse-save": {
            "get": {
                "description": "Save pools from parser to storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parse: core"
                ],
                "summary": "Store parsed pools",
                "operationId": "ParseWrite",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parser/pools": {
            "get": {
                "description": "Get pools from current parser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parse: setup parser"
                ],
                "summary": "Get parsed pools",
                "operationId": "getParsed",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parser/protocols": {
            "get": {
                "description": "Get current parse protocols",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parse: setup parser"
                ],
                "summary": "Get protocols",
                "operationId": "getProtocols",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListProtocols"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add parse protocols",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parse: setup parser"
                ],
                "summary": "Add protocols",
                "operationId": "addProtocols",
                "parameters": [
                    {
                        "description": "Set protocol",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListProtocols"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListProtocols"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove parse protocols",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parse: setup parser"
                ],
                "summary": "Remove protocols",
                "operationId": "rmProtocols",
                "parameters": [
                    {
                        "description": "Remove protocols",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListProtocols"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ListProtocols"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/provider/tokens": {
            "get": {
                "description": "Request token list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider: tokens"
                ],
                "summary": "List Tokens",
                "operationId": "listTokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    }
                }
            },
            "post": {
                "description": "Add list of tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider: tokens"
                ],
                "summary": "Add Tokens",
                "operationId": "addTokens",
                "parameters": [
                    {
                        "description": "Add tokens",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/storage/pools": {
            "get": {
                "description": "Get list of all pools from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage: pools"
                ],
                "summary": "Get Pools",
                "operationId": "getPoolList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add list of pools to storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage: pools"
                ],
                "summary": "Add Pools",
                "operationId": "addPools",
                "parameters": [
                    {
                        "description": "Add pools",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete pools from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage: pools"
                ],
                "summary": "Delete Pools",
                "operationId": "deletePools",
                "parameters": [
                    {
                        "description": "Delete pools",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPools"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/storage/tokens": {
            "get": {
                "description": "Get list of all tokens from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage: tokens"
                ],
                "summary": "Get Tokens",
                "operationId": "getTokensList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add list of tokens to storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage: tokens"
                ],
                "summary": "Add Tokens",
                "operationId": "storeTokens",
                "parameters": [
                    {
                        "description": "Add tokens",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tokens from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage: tokens"
                ],
                "summary": "Delete Tokens",
                "operationId": "deleteTokens",
                "parameters": [
                    {
                        "description": "Delete tokens",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/core/flash-arbitrage": {
            "get": {
                "description": "Call flash arbitrage func from contract with give pools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: core"
                ],
                "summary": "DoArbitrage",
                "operationId": "doArbitrage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Swap pool 0",
                        "name": "pool0",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Swap pool 1",
                        "name": "pool1",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/core/profit-check": {
            "get": {
                "description": "Find out if trade with given pools is profitable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: core"
                ],
                "summary": "CheckProfit",
                "operationId": "checkProfit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Swap pool 0",
                        "name": "pool0",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Swap pool 1",
                        "name": "pool1",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/core/withdraw": {
            "get": {
                "description": "Withdraw tokens from contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: core"
                ],
                "summary": "Withdraw",
                "operationId": "withdraw",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/pairs": {
            "get": {
                "description": "Load profitable pool pairs from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: setup case"
                ],
                "summary": "Load Pairs",
                "operationId": "loadPairs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListPairs"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/tokens": {
            "get": {
                "description": "Load unknown tokens from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: setup case"
                ],
                "summary": "Load Tokens",
                "operationId": "loadTokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenList"
                        }
                    },
                    "507": {
                        "description": "Insufficient Storage",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/tokens/base": {
            "post": {
                "description": "Add base token to contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: base tokens"
                ],
                "summary": "Add Base Token",
                "operationId": "addBase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Add base token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove base token from contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade: base tokens"
                ],
                "summary": "Remove Base Token",
                "operationId": "rmBase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Remove base token",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "description": "Error response object",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "message"
                }
            }
        },
        "ListPairs": {
            "description": "Request list of trading pairs",
            "type": "object",
            "properties": {
                "pairs": {
                    "description": "list of trade pools",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.TradePair"
                    }
                }
            }
        },
        "ListPools": {
            "description": "Request list of trading pools",
            "type": "object",
            "properties": {
                "pools": {
                    "description": "list of trade pools",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Pool"
                    }
                }
            }
        },
        "ListProtocols": {
            "description": "Request list of protocols",
            "type": "object",
            "properties": {
                "protocols": {
                    "description": "list of protocols",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.SwapProtocol"
                    }
                }
            }
        },
        "RequestPairs": {
            "description": "Request for searching trade pair",
            "type": "object",
            "properties": {
                "protocol": {
                    "description": "trade protocol",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entities.SwapProtocol"
                        }
                    ]
                },
                "tokenPair": {
                    "description": "pair of tokens",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entities.TokenPair"
                        }
                    ]
                }
            }
        },
        "Response": {
            "description": "Response object",
            "type": "object",
            "properties": {
                "body": {
                    "description": "returned data"
                }
            }
        },
        "TokenList": {
            "description": "Request list of tokens",
            "type": "object",
            "properties": {
                "tokens": {
                    "description": "list of tokens",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Token"
                    }
                }
            }
        },
        "entities.Pool": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pair": {
                    "$ref": "#/definitions/entities.TokenPair"
                },
                "protocol": {
                    "$ref": "#/definitions/entities.SwapProtocol"
                }
            }
        },
        "entities.SwapProtocol": {
            "type": "object",
            "properties": {
                "factory": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "router": {
                    "type": "string"
                }
            }
        },
        "entities.Token": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "wei": {
                    "type": "integer"
                }
            }
        },
        "entities.TokenPair": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "token0": {
                    "$ref": "#/definitions/entities.Token"
                },
                "token1": {
                    "$ref": "#/definitions/entities.Token"
                }
            }
        },
        "entities.TradePair": {
            "type": "object",
            "properties": {
                "pool0": {
                    "$ref": "#/definitions/entities.Pool"
                },
                "pool1": {
                    "$ref": "#/definitions/entities.Pool"
                }
            }
        }
    }
}